version: '3.7'

services:
  armut.messaging.api:
    image: ${DOCKER_REGISTRY-}armutmessagingapi
    build:
      context: .
      dockerfile: src/Armut.Messaging.Api/Dockerfile
    environment:
      - "ConnectionStrings:MongoDB=mongodb://mongodb:27017"
    depends_on:
      - mongodb
    #  - elasticsearch
    #networks:
    #  - elastcinetwork
    #links:
    # - elasticsearch

  mongodb:
    image: mongo:latest
    container_name: armut-mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ${WEBAPP_STORAGE_HOME}/site:/data/db
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: armut-mongodb

  elasticsearch:
    image: elasticsearch:7.16.1
    container_name: armut.elastic
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - elastcinetwork

  logstash:
    image: logstash:7.16.2
    container_name: armut.logstash
    restart: always
    volumes:
    - ./logstash/:/logstash_dir
    command: logstash -f /logstash_dir/logstash.conf 
    depends_on:
      - elasticsearch
    ports:
    - '9600:9600'
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"    
    networks:
      - elastcinetwork

  kibana:
    image: kibana:7.16.1
    container_name: armut.kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elastcinetwork

networks:
  elastcinetwork:
    driver: bridge

volumes:
  elasticsearch-data: